from telegram import Update
from telegram.ext import filters, MessageHandler, ApplicationBuilder, CommandHandler, ContextTypes

from bot_logic import RestaurantAssistantBot

from config import TELEGRAM_TOKEN

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = RestaurantAssistantBot()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ –æ–±–µ–¥–æ–≤. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=bot.menu_keyboard,
        parse_mode='Markdown'
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å –º–µ–Ω—é, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–∞–±–æ—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ!",
        reply_markup=bot.menu_keyboard,
        parse_mode='Markdown'
    )


async def menu_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        bot.show_menu(),
        reply_markup=bot.menu_keyboard,
        parse_mode='Markdown'
    )


async def cart_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.message.from_user.id)

    await update.message.reply_text(
        bot.show_cart(user_id),
        reply_markup=bot.menu_keyboard,
        parse_mode='Markdown'
    )


async def clear_cart_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.message.from_user.id)

    await update.message.reply_text(
        bot.clear_cart(user_id),
        reply_markup=bot.menu_keyboard,
        parse_mode='Markdown'
    )


async def complete_order_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.message.from_user.id)

    await update.message.reply_text(
        bot.complete_order(user_id),
        reply_markup=bot.menu_keyboard,
        parse_mode='Markdown'
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.message.from_user.id)
    user_name = update.effective_user.username

    text = update.message.text

    if text == "üìã –ú–µ–Ω—é":
        await menu_command(update, context)

        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({user_id} - {user_name}): –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É \"–º–µ–Ω—é\"")

    elif text == "üõí –ö–æ—Ä–∑–∏–Ω–∞":
        await cart_command(update, context)

        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({user_id} - {user_name}): –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É \"–∫–æ—Ä–∑–∏–Ω–∞\"")

    elif text == "‚ùå –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É":
        await clear_cart_command(update, context)

        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({user_id} - {user_name}): –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É \"–æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É\"")

    elif text == "‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑":
        await complete_order_command(update, context)

        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({user_id} - {user_name}): –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É \"–æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑\"")

    else:
        response = bot.handle_message(text, user_id)

        await update.message.reply_text(
            response,
            reply_markup=bot.menu_keyboard,
            parse_mode='Markdown'
        )

        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ({user_id} - {user_name}): {text}")
        print(f"–û—Ç–≤–µ—Ç –±–æ—Ç–∞: {response}")
        print()

    coupon_flag, coupon_message = bot.is_coupon_needed(user_id)
    if bot.get_user_sentiment(user_id) <= -0.75:
        sorry_message = bot.apologize(user_id)
        await update.message.reply_text(
            sorry_message,
            reply_markup=bot.menu_keyboard,
            parse_mode='Markdown'
        )
    elif coupon_flag:
        await update.message.reply_text(
            coupon_message,
            reply_markup=bot.menu_keyboard,
            parse_mode='Markdown'
        )


def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("menu", menu_command))
    app.add_handler(CommandHandler("cart", cart_command))
    app.add_handler(CommandHandler("clear_cart", clear_cart_command))
    app.add_handler(CommandHandler("complete_order", complete_order_command))

    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

    app.run_polling()


if __name__ == '__main__':
    main()
